#
#
LD  = ld
AR  = ar
RANLIB  = ranlib

TOP_DIR = ..
INC_DIR = $(TOP_DIR)/inc
INSTALL = $(TOP_DIR)/install-sh -c

ifndef OSNAME
OSNAME := $(shell uname)
endif

# Linux
ifeq ($(OSNAME),Linux)
CC  = gcc
CXX = g++
LIB_DIR  = $(TOP_DIR)/lib/Linux
BIN_DIR  = $(TOP_DIR)/bin/Linux
AC_FLAGS =
CFLAGS   = -O2 -fPIC -I. -I$(INC_DIR) $(AC_FLAGS)
LIBS     = -lieee -lrt -lpthread -lm -lnsl -lresolv -ldl
endif

# Solaris
ifeq ($(OSNAME),SunOS)
CC  = cc
CXX = CC
LIB_DIR  = $(TOP_DIR)/lib/SunOS
BIN_DIR  = $(TOP_DIR)/bin/SunOS
AC_FLAGS = -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS
CFLAGS   = -mt -xO5 -KPIC -I. -I$(INC_DIR) $(AC_FLAGS)
LIBS     = -lm -lposix4 -lpthread -lsocket -lnsl -lresolv -ldl
endif

CFLAGSXX  = $(CFLAGS) -Dcppversion
SHLIB_LD  = ld -G

LIBNAM      = libcmsg
LIB_STATIC  = $(LIBNAM).a
LIB_DYNAMIC = $(LIBNAM).so

LIBNAMXX      = libcmsgxx
LIB_STATICXX  = $(LIBNAMXX).a
LIB_DYNAMICXX = $(LIBNAMXX).so

CMSG_LIBS   = $(LIB_STATIC) $(LIB_DYNAMIC)
CMSG_LIBSXX = $(LIB_STATICXX) $(LIB_DYNAMICXX)

SRC =   rwlock.c \
	sunConcurrency.c \
	cMsgMatching.c \
	cMsgNetwork.c \
	cMsg.c \
	cMsgDomainListenThread.c \
	cMsgDomain.c
#	rcadUtil.c \
#	rcAgentDomain.c

OBJS =  rwlock.o \
	sunConcurrency.o \
	cMsgMatching.o \
	cMsgNetwork.o \
	cMsg.o \
	cMsgDomainListenThread.o \
	cMsgDomain.o
#	rcadUtil.o \
#	rcAgentDomain.o

SRCXX =	rwlock.c \
	cMsgNetwork.c \
	cMsg.c \
	cMsgDomainListenThread.c \
	cMsgDomain.c \
	cMsgWrapper.cc


OBJSXX = rwlock.o \
         cMsgNetwork.o \
	 cMsg.o \
	 cMsgDomainListenThread.o \
	 cMsgDomain.o \
	 cMsgWrapper.o


HFILES   = cMsgNetwork.h cMsgPrivate.h cMsgBase.h cMsgDomain.h rwlock.h errors.h
HFILESXX = $(HFILES) cMsgBase.hxx
#HFILES   = cMsgNetwork.h cMsgPrivate.h cMsg.h cMsgDomain.h rwlock.h errors.h rcAgentDomain.h

PROGS   = producer consumer getConsumer getResponder shutdowner
PROGSXX =


all: $(CMSG_LIBS) $(CMSG_LIBSXX) $(PROGS) $(PROGSXX)

install: all install-lib install-inc install-bin

install-lib: $(CMSG_LIBS) $(CMSG_LIBSXX)
	@echo "Installing CMSG libraries in $(LIB_DIR)"
	@for i in $(CMSG_LIBS); do \
	   echo "  installing $$i"; \
	   $(INSTALL) $$i $(LIB_DIR)/$$i; \
           done;
	@for i in $(CMSG_LIBSXX); do \
	   echo "  installing $$i"; \
	   $(INSTALL) $$i $(LIB_DIR)/$$i; \
           done;

install-inc: $(HFILES) $(HFILESXX)
	@echo "Installing includes in $(INC_DIR)"
	@for i in $(HFILES); do \
	   echo "  installing $$i"; \
	   $(INSTALL) $$i $(INC_DIR)/$$i; \
           done;

install-bin: $(PROGS) $(PROGSXX)
	@echo "Installing executables in $(BIN_DIR)"
	@for i in $(PROGS); do \
	   echo "  installing $$i"; \
	   $(INSTALL) $$i $(BIN_DIR)/$$i; \
           done;

# libraries
$(LIB_STATIC): $(OBJS)
	$(AR) cr $@ $?
	$(RANLIB) $@

$(LIB_DYNAMIC): $(OBJS)
	$(SHLIB_LD) $(OBJS) -o $@

$(LIB_STATICXX): $(SRCXX)
	$(RM) $(OBJSXX)
	$(CXX) -c $(CFLAGSXX) $(SRCXX)
	$(RM) $(LIB_STATICXX)
	$(AR) cr $@ $(OBJSXX)
	$(RANLIB) $@
	$(RM) $(LIB_DYNAMICXX)
	$(SHLIB_LD) $(OBJSXX) -o $@
	$(RM) $(OBJSXX)


$(LIB_DYNAMICXX): $(SRCXX)
	$(RM) $(OBJSXX)
	$(CXX) -c $(CFLAGSXX) $(SRCXX)
	$(RM) $(LIB_DYNAMICXX)
	$(SHLIB_LD) $(OBJSXX) -o $@
	$(RM) $(OBJSXX)


# file dependencies
$(OBJS)   : $(HFILES) $(SRC)
$(OBJSXX) : $(HFILESXX) $(SRCXX)

clean: 
	rm -f core *~ *.o *.so *.a *.class $(PROGS) $(PROGSXX)


# SUFFIX RULES
.c:
	$(CC) -o $* $(CFLAGS) $< -L./ -L$(LIB_DIR) -lcmsg -lcMsgRegex $(LIBS)
.cc:
	$(CXX) -o $* $(CFLAGSXX) $< -L./ -L$(LIB_DIR) -lcmsgxx -lcMsgRegex $(LIBS)
.c.o:
	$(CC) -c $(CFLAGS) $<
.cc.o:
	$(CXX) -c $(CFLAGSXX) $<
