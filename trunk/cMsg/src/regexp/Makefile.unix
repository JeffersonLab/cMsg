# You probably want to take -DREDEBUG out of CFLAGS, and put something like
# -O in, *after* testing (-DREDEBUG strengthens testing by enabling a lot of
# internal assertion checking and some debugging facilities).
# Do not take -DPOSIX_MISTAKE out.

TOP_DIR = ../..
INC_DIR = $(TOP_DIR)/inc
INSTALL = $(TOP_DIR)/install-sh -c

ifndef OSNAME
OSNAME := $(shell uname)
endif

# Linux
ifeq ($(OSNAME),Linux)
CC = gcc
LIB_DIR  = $(TOP_DIR)/lib/Linux
BIN_DIR  = $(TOP_DIR)/bin/Linux
AC_FLAGS =
CFLAGS   = -O2 -fPIC -I./ -DPOSIX_MISTAKE $(AC_FLAGS)
endif

# Solaris
ifeq ($(OSNAME),SunOS)
CC = cc
LIB_DIR  = $(TOP_DIR)/lib/SunOS
BIN_DIR  = $(TOP_DIR)/bin/SunOS
AC_FLAGS = -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS
CFLAGS   = -mt -xO5 -KPIC -I. -DPOSIX_MISTAKE $(AC_FLAGS)
endif

REGEX_LIBS = libcMsgRegex.so libcMsgRegex.a
HFILES = regex.h

SHLIB_LD = ld -G
PROGS = main

# Internal stuff, should not need changing.
OBJPRODN=regcomp.o regexec.o regerror.o regfree.o

default: solib lib $(PROGS)

lib:	$(OBJPRODN)
	rm -f libcMsgRegex.a
	ar crv libcMsgRegex.a $(OBJPRODN)
        
solib:	$(OBJPRODN)
	rm -f libcMsgRegex.so
	$(SHLIB_LD) $(OBJPRODN) -o libcMsgRegex.so

# arrangements to build forward-reference header files
%.ih : %.c
	sh ./mkh -p $< >$@

# dependencies
$(OBJPRODN):	utils.h regex.h regex2.h
regcomp.o:	cclass.h cname.h regcomp.ih
regexec.o:	engine.c engine.ih
regerror.o:	regerror.ih
       
install: solib lib install-lib install-inc

install-lib: $(REGEX_LIBS)
	@echo "Installing regular expression libraries in $(LIB_DIR)"
	@for i in $(REGEX_LIBS); do \
	   echo "  installing $$i"; \
	   $(INSTALL) $$i $(LIB_DIR)/$$i; \
           done;

install-inc: $(HFILES)
	@echo "Installing includes in $(INC_DIR)"
	@for i in $(HFILES); do \
	   echo "  installing $$i"; \
	   $(INSTALL) $$i $(INC_DIR)/$$i; \
           done;
           
# various forms of cleanup
purge:
	rm -f *.o

tidy:
	rm -f junk* core core.* *.core dtr *.tmp lint

clean:	tidy
	rm -f *.o *.s *.ih re libcMsgRegex.a libcMsgRegex.so
        
