#
# cMsg unix makefile for regexp code
#

# You probably want to take -DREDEBUG out of CFLAGS, and put something like
# -O in, *after* testing (-DREDEBUG strengthens testing by enabling a lot of
# internal assertion checking and some debugging facilities).
# Do not take -DPOSIX_MISTAKE out.

LIBNAM      = libcMsgRegex
LIB_STATIC  = $(LIBNAM).a
LIB_DYNAMIC = $(LIBNAM).so

# Linux
ifeq ($(OSNAME),Linux)
CC = gcc
CFLAGS   = -O3 -fpic -I./ -DPOSIX_MISTAKE
SHLIB_LD = gcc -shared

# if 32 bit
ifneq ($(CMSG_BIT_ARCH), 64)
CFLAGS   = -m32 -O3 -fpic -I./ -DPOSIX_MISTAKE
SHLIB_LD = ld -m elf_i386 -shared
SHLIB_LD = gcc -m32 -shared
endif

endif

# Solaris
ifeq ($(OSNAME),SunOS)

CC = cc
AC_FLAGS = -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS
LIBS     = -lm -lposix4 -lpthread -lsocket -lnsl -lresolv -ldl

# if 64 bit
ifeq ($(CMSG_BIT_ARCH), 64)

# no static linking on 64 bit solaris
LIB_STATIC =

# if SPARC processor
ifeq ($(PLATFORM), sun4u)
CFLAGS   = -mt -xO5 -xarch=native64 -xcode=pic32 -I. -I$(INC_DIR) $(AC_FLAGS)
SHLIB_LD = ld -G -L /lib/64
# else if AMD processor
else
# put -fast flag to left of -xarch=amd64 !!!
CFLAGS   = -mt -xO5 -xarch=amd64 -KPIC -I. -I$(INC_DIR) $(AC_FLAGS)
# for some reason we must handle ucb lib explicitly
SHLIB_LD = ld -G -L /lib/64 -L /usr/ucblib/amd64
endif

# else if 32 bit
else
CFLAGS   = -mt -xO5 -KPIC -I. -I$(INC_DIR) $(AC_FLAGS)
SHLIB_LD = ld -G
endif

endif

REGEX_LIBS = $(LIB_STATIC) $(LIB_DYNAMIC)
HFILES = regex.h

PROGS =

# Internal stuff, should not need changing.
OBJPRODN=regcomp.o regexec.o regerror.o regfree.o

all: copyObjectFiles solib lib $(PROGS) saveObjectFiles

lib:	$(OBJPRODN)
	rm -f libcMsgRegex.a
	ar crv libcMsgRegex.a $(OBJPRODN)
        
solib:	$(OBJPRODN)
	rm -f libcMsgRegex.so
	$(SHLIB_LD) $(OBJPRODN) -o libcMsgRegex.so

# arrangements to build forward-reference header files
%.ih : %.c
	sh ./mkh -p $< >$@

# dependencies
$(OBJPRODN):	utils.h regex.h regex2.h
regcomp.o:	cclass.h cname.h regcomp.ih
regexec.o:	engine.c engine.ih
regerror.o:	regerror.ih
       
copyObjectFiles:
	-$(RM) *.o
	-cp ./.$(OSNAME)/$(PLATFORM)/$(CMSG_BIT_ARCH)/*.o .;

saveObjectFiles:
	-cp *.o ./.$(OSNAME)/$(PLATFORM)/$(CMSG_BIT_ARCH)/.;
	-$(RM) *.o

install: all install-lib install-inc

install-lib: $(REGEX_LIBS)
	@echo "Installing regular expression libraries in $(LIB_DIR)"
	@for i in $(REGEX_LIBS); do \
	   echo "  installing $$i"; \
	   cp $$i $(LIB_DIR)/$$i; \
           done;

install-inc: $(HFILES)
	@echo "Installing includes in $(INC_DIR)"
	@for i in $(HFILES); do \
	   echo "  installing $$i"; \
	   cp $$i $(INC_DIR)/$$i; \
           done;
           
# various forms of cleanup
purge:
	rm -f *.o

tidy:
	rm -f junk* core core.* *.core dtr *.tmp lint

clean:	tidy
	rm -f *.o *.s *.ih re libcMsgRegex.a libcMsgRegex.so
        
